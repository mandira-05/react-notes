video-70 - previous props with hooks

import './App.css';
import React from 'react'
import Child from './Child'
function App() {
  const [count,setCount]=React.useState(0)
  return (
    <div className="App">
      <Child count={count} />
      <button onClick={()=>{setCount( Math.floor(Math.random()*10) )}} >Update Counter</button>
    </div>
  );
}

export default App;

Child.js
import React,{useEffect,useRef} from 'react'
function Child(props)
{
    const lastVal=useRef();
    useEffect(()=>{
        lastVal.current=props.count  //useRef last value dom se uthayega
    })
    const previousProps=lastVal.current
    return(
        <div>
            <h1>Count is  : {props.count}</h1>
            <h1>previous Props is  : {previousProps}</h1>

        </div>
    )
}

export default Child

useEffect is used because we want our logic to execute after the HTML execution, 
And here use useRef is used for the updating purpose in DOM. 

